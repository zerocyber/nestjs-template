// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // previewFeatures = ["prismaSchemaFolder"] // 폴더 구조의 프리즈마 스키마 파일 적용하기 위한 설정
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Todo {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @map("user_id")
  title     String
  memo      String?
  isDeleted    Boolean @default(false) @map("is_deleted")
  isDone    Boolean  @default(false) @map("is_done")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("todo")
}

enum UserStatus {
  ACTIVE
  INACTIVE
  DELETED
}

model User {
  id        Int      @id @default(autoincrement())
  groupId   Int?     @map("group_id")
  name      String
  email     String
  password  String
  status    UserStatus   @default(ACTIVE)
  group     UserGroup?   @relation(fields: [groupId], references: [id])
  todos     Todo[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("todo_user")
}

model UserGroup {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  users     User[]

  @@map("todo_user_group")
}